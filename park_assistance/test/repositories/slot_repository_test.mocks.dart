// Mocks generated by Mockito 5.4.2 from annotations
// in park_assistance/test/repositories/slot_repository_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:dio/dio.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:park_assistance/data/models/api_result.dart' as _i5;
import 'package:park_assistance/network/base_api_provider.dart' as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeDio_0 extends _i1.SmartFake implements _i2.Dio {
  _FakeDio_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [BaseApiProvider].
///
/// See the documentation for Mockito's code generation for more information.
class MockBaseApiProvider extends _i1.Mock implements _i3.BaseApiProvider {
  @override
  String get baseUrl => (super.noSuchMethod(
        Invocation.getter(#baseUrl),
        returnValue: '',
        returnValueForMissingStub: '',
      ) as String);

  @override
  _i2.Dio getDio() => (super.noSuchMethod(
        Invocation.method(
          #getDio,
          [],
        ),
        returnValue: _FakeDio_0(
          this,
          Invocation.method(
            #getDio,
            [],
          ),
        ),
        returnValueForMissingStub: _FakeDio_0(
          this,
          Invocation.method(
            #getDio,
            [],
          ),
        ),
      ) as _i2.Dio);

  @override
  _i4.Future<_i5.ApiResult<dynamic>?> get(
    String? path, {
    Map<String, dynamic>? queryParameters,
    _i2.Options? options,
    _i2.CancelToken? cancelToken,
    _i2.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #get,
          [path],
          {
            #queryParameters: queryParameters,
            #options: options,
            #cancelToken: cancelToken,
            #onReceiveProgress: onReceiveProgress,
          },
        ),
        returnValue: _i4.Future<_i5.ApiResult<dynamic>?>.value(),
        returnValueForMissingStub: _i4.Future<_i5.ApiResult<dynamic>?>.value(),
      ) as _i4.Future<_i5.ApiResult<dynamic>?>);

  @override
  _i4.Future<_i5.ApiResult<dynamic>?> post(
    String? path, {
    dynamic data,
    Map<String, dynamic>? queryParameters,
    _i2.Options? options,
    _i2.CancelToken? cancelToken,
    _i2.ProgressCallback? onSendProgress,
    _i2.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #post,
          [path],
          {
            #data: data,
            #queryParameters: queryParameters,
            #options: options,
            #cancelToken: cancelToken,
            #onSendProgress: onSendProgress,
            #onReceiveProgress: onReceiveProgress,
          },
        ),
        returnValue: _i4.Future<_i5.ApiResult<dynamic>?>.value(),
        returnValueForMissingStub: _i4.Future<_i5.ApiResult<dynamic>?>.value(),
      ) as _i4.Future<_i5.ApiResult<dynamic>?>);

  @override
  _i4.Future<String> test(String? b) => (super.noSuchMethod(
        Invocation.method(
          #test,
          [b],
        ),
        returnValue: _i4.Future<String>.value(''),
        returnValueForMissingStub: _i4.Future<String>.value(''),
      ) as _i4.Future<String>);
}
